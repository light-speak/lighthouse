// Code generated by github.com/light-speak/lighthouse, DO NOT EDIT.
package resolver

import (
  "user/models"
  "github.com/light-speak/lighthouse/graphql/model"
  "github.com/light-speak/lighthouse/context"
  "github.com/light-speak/lighthouse/log"
)


func TestPostInputResolver(ctx *context.Context, input models.TestInput) (string, error) {
	// Func:TestPostInput user code start. Do not remove this comment.
	panic("not implement")
	// Func:TestPostInput user code end. Do not remove this comment. 
}
func GetPostResolver(ctx *context.Context, fuck string) (*models.Post, error) {
	// Func:GetPost user code start. Do not remove this comment.
	log.Debug().Msg("GetPostResolver")
	db := model.GetDB()
	db.Where("id = ?", fuck).First(&models.Post{})
	model.GetQuickLoad("Post")(ctx, 1, "id")
	return nil, nil
	// Func:GetPost user code end. Do not remove this comment. 
}
func TestPostEnumResolver(ctx *context.Context, enum models.TestEnum) (string, error) {
	// Func:TestPostEnum user code start. Do not remove this comment.
	panic("not implement")
	// Func:TestPostEnum user code end. Do not remove this comment. 
}
