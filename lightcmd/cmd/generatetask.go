// Code generated by github.com/light-speak/lighthouse, YOU CAN FUCKING EDIT BY YOURSELF.
package cmd

import "github.com/light-speak/lighthouse/lightcmd/queue"

type GenerateTask struct{}

func (c *GenerateTask) Name() string {
	// Func:Name user code start. Do not remove this comment.
	return "generate:task"
	// Func:Name user code end. Do not remove this comment.
}

func (c *GenerateTask) Usage() string {
	// Func:Usage user code start. Do not remove this comment.
	return "generate task in project"
	// Func:Usage user code end. Do not remove this comment.
}

func (c *GenerateTask) Args() []*CommandArg {
	return []*CommandArg{
		// Func:Args user code start. Do not remove this comment.
		{
			Name:     "name",
			Type:     String,
			Required: true,
			Usage:    "task name",
		},
		// Func:Args user code end. Do not remove this comment.
	}
}

func (c *GenerateTask) Action() func(flagValues map[string]interface{}) error {
	return func(flagValues map[string]interface{}) error {
		// Func:Action user code start. Do not remove this comment.
		args, err := GetArgs(c.Args(), flagValues)
		if err != nil {
			return err
		}

		name, err := GetStringArg(args, "name")
		if err != nil {
			return err
		}

		return queue.GenTask(*name)
		// Func:Action user code end. Do not remove this comment.
	}
}

func (c *GenerateTask) OnExit() func() {
	return func() {
		// Func:OnExit user code start. Do not remove this comment.
		// Func:OnExit user code end. Do not remove this comment.
	}
}

func init() {
	AddCommand(&GenerateTask{})
}

// Section: user code section start. Do not remove this comment.
// Section: user code section end. Do not remove this comment.
