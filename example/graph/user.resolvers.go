package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.53

import (
	"context"

	"github.com/light-speak/lighthouse/graphql/resolver"
)

// User is the resolver for the user field.
func (r *queryResolver) User(ctx context.Context, id int64) (*User, error) {
	var user *User
	tx := r.Db
	if err := resolver.ResolveData(ctx, tx, "user", &user, resolver.Option{Type: &resolver.Query, QueryType: &resolver.OneQuery}); err != nil {
		return nil, err
	}
	return r.mergeUser(ctx, user)
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
