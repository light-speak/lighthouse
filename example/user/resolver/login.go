// Code generated by github.com/light-speak/lighthouse, YOU CAN FUCKING EDIT BY YOURSELF.
package resolver

import (
  "github.com/light-speak/lighthouse/log"
  "user/models"
  "user/test"
  "fmt"
  "github.com/light-speak/lighthouse/auth"
  "github.com/light-speak/lighthouse/context"
  "github.com/light-speak/lighthouse/graphql/model"
)


// Login <nil>
// 
// Parameters:
// - name: <nil>
// 
// Returns:
// 
// - LoginResponse
func (r *Resolver) LoginResolver(ctx *context.Context,name string) (*models.LoginResponse, error) {
	// Func:Login user code start. Do not remove this comment.
	user := &models.User{}
	db := model.GetDB()
	if err := db.Model(&models.User{}).Where("id = ?", 2).First(user).Error; err != nil {
		return nil, err
	}
	token, err := auth.GetToken(user.Id)
	if err != nil {
		return nil, err
	}
	log.Info().Msgf("currentUser: %v", ctx.UserId)
	test.Test()
	return &models.LoginResponse{
		User:          user,
		Token:         token,
		Authorization: fmt.Sprintf("Bearer %s", token),
	}, nil
	// Func:Login user code end. Do not remove this comment. 
}