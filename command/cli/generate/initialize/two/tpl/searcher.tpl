// Code generated by github.com/light-speak/lighthouse, YOU CAN FUCKING EDIT BY YOURSELF.
type Searcher struct{}

func (s *Searcher) Name() string {
	// Func:Name user code start. Do not remove this comment.
	return "searcher:import"
	// Func:Name user code end. Do not remove this comment.
}

func (s *Searcher) Usage() string {
	// Func:Usage user code start. Do not remove this comment.
	return "This is a command to import model to search engine"
	// Func:Usage user code end. Do not remove this comment.
}

func (s *Searcher) Args() []*command.CommandArg {
	return []*command.CommandArg{
		{
			Name:     "model",
			Type:     command.String,
			Usage:    "The model to import",
			Required: true,
		},
	}
}

func (s *Searcher) Action() func(flagValues map[string]interface{}) error {
	return func(flagValues map[string]interface{}) error {
		// Func:Action user code start. Do not remove this comment.
		args, err := command.GetArgs(s.Args(), flagValues)
		if err != nil {
			return err
		}
		modelName, err := command.GetStringArg(args, "model")
		if err != nil {
			return err
		}
		log.Info().Msgf("modelName: %s", modelName)
		// importModel,ok := model.GetSearchableModelMapping()[modelName]
		// Func:Action user code end. Do not remove this comment.
		return nil
	}
}

func (s *Searcher) OnExit() func() {
	return func() {}
}

// Section: user code section start. Do not remove this comment.
func Import(m model.SearchModel) error {
	db := model.GetDB()
	model.InitSearch()
	searcher := model.GetSearcher()
	searcher.CreateOrUpdateIndex(m)

	var count int64
	var limit int = 1000
	var offset int = 0
	if err := db.Table(m.TableName()).Count(&count).Error; err != nil {
		return err
	}
	for offset < int(count) {
		succCount, err := searcher.IndexDocsByModel(m, offset, limit)
		if err != nil {
			return err
		}
		utils.SmoothProgress(offset*100/int(count), 100, fmt.Sprintf("Indexing documents (%d/%d)", succCount, count), time.Millisecond*100, true)
		offset += limit
	}

	fmt.Printf("\033[32m\nImport model %s %d documents success\n\033[0m", m.TypeName(), count)
	return nil
}
// Section: user code section end. Do not remove this comment.
