// Code generated by github.com/light-speak/lighthouse, DO NOT EDIT.
package models

import "github.com/light-speak/lighthouse/graphql/model"

type User struct {
	model.Model
	MyPosts []Post `json:"my_posts" gorm:"comment:五二零" `
	Name    string `json:"name" gorm:"index;type:varchar(255)" `
}

func (*User) IsModel() bool        { return true }
func (*User) IsHasName() bool      { return true }
func (this *User) GetName() string { return this.Name }
func (*User) TableName() string    { return "users" }
func (*User) TypeName() string     { return "user" }

type Post struct {
	model.ModelSoftDelete
	UserId  int64    `json:"user_id" `
	TagId   int64    `json:"tag_id" `
	Enum    TestEnum `json:"enum" `
	Content string   `json:"content" gorm:"type:varchar(255)" `
	BackId  int64    `json:"back_id" `
	IsBool  bool     `json:"is_bool" gorm:"default:false" `
	User    User     `json:"user" `
	Title   string   `json:"title" gorm:"index;type:varchar(255)" `
}

func (*Post) IsModel() bool     { return true }
func (*Post) TableName() string { return "posts" }
func (*Post) TypeName() string  { return "post" }

func Migrate() error {
	return model.GetDB().AutoMigrate(
		&User{},
		&Post{},
	)
}
