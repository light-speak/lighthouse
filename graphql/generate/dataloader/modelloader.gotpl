// Code generated by github.com/light-speak/lighthouse, DO NOT EDIT.

package graph

import (
	"gorm.io/gorm"
	"time"
)

{{ range $name := .Names -}}
func Get{{- $name -}}Loader(db *gorm.DB) *{{- $name -}}Loader {
    return &{{- $name -}}Loader{
        maxBatch: 100,
        wait:     1 * time.Millisecond,
        fetch: func(ids []int64) ([]*{{- ucFirst $name -}}, []error) {
            var {{ lcFirst $name -}}s []*{{- ucFirst $name }}
            if err := db.Find(&{{- lcFirst $name -}}s, ids).Error; err != nil {
                return nil, nil
            }
            {{ lcFirst $name -}}ById := map[int64]*{{- $name -}}{}
            for _, {{ lcFirst $name -}} := range {{ lcFirst $name -}}s {
                {{- lcFirst $name -}}ById[{{- lcFirst $name -}}.ID] = {{- lcFirst $name -}}
            }

            result := make([]*{{- ucFirst $name -}}, len(ids))
            for i, id := range ids {
                result[i] = {{- lcFirst $name -}}ById[id]
                i++
            }
            return result, nil
        },
    }
}
{{ end }}