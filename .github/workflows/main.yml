name: CI

on:
  push:
    branches:
      - main
      - staging
    tags:
      - 'v*'
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
      - staging

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          
      - name: Run Tests
        run: go test -race -coverprofile=coverage.txt -covermode=atomic ./...
        
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        if: success()
        
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          
  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/golang@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository
          
      - name: Run CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  sonarcloud:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}