# Code generated by github.com/light-speak/lighthouse, DO NOT EDIT.
interface Userable {
  userId: ID!!
  user: User!!
}

type PaginateInfo {
  currentPage: Int!
  totalPage: Int!
  hasNextPage: Boolean!
  totalCount: Int
}

interface HasName {
  name: String!!
}

type Post {
  title: String!
  content: String!
  userId: ID!
  user: User!
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
}

type User implements HasName {
  name: String!
  posts(page: Int, size: Int): PostPaginateResponse!
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Query {
  users(page: Int, size: Int): UserPaginateResponse!
  posts(page: Int, size: Int): PostPaginateResponse!
}

type PostPaginateResponse {
  data: [Post!]!
  paginateInfo: PaginateInfo!
}

type UserPaginateResponse {
  data: [User!]!
  paginateInfo: PaginateInfo!
}


# ============== Scalar ==============
scalar DateTime
