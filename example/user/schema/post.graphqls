type Post @softDeleteModel {
  title: String! @index
  content: String!
  userId: ID! @index
  tagId: ID! 
  BackId: ID!
  IsBool: Boolean! @default(value: "false")
  user: User! @belongsTo
  enum: TestEnum!
  comments: [Comment!]! @morphToMany(relation: "comment")
}

extend type Query {
  postPage: [Post!]! @paginate
  posts(id: [ID!]! @in, user_id: ID! @neq): [Post!]! @find
  post(id: ID! @eq): Post! @first
  getPost(fuck: String!): Post! 
  getPosts(fuck: String!): [Post!]! 
  getPostIds: [ID!]!
  testPostId(id: ID!): Post
  testPostInt(id: Boolean!): Post
  testPostEnum(enum: TestEnum!): String!
  testPostInput(input: TestInput!): String! 
  testNullableEnum(enum: TestEnum): String! 
}

extend type Mutation {
  createPost(input: TestInput): Post!
  "创建帖子2"
  createPost2(
    "用户名"
    name: String
    "年龄"
    age: Int
  ): Post
}

type Test {
  test: String!
}

input TestInput {
  id: String
  e: Boolean
  enum: TestEnum!
}

enum TestEnum {
  "这是A"
  A @enum(value: 1)
  "这是B"
  B @enum(value: 2)
}

enum TestEnum2 {
  A2 
  B2 
}
