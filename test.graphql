"""The DateTime scalar type represents a date and time."""
scalar DateTime

interface HasName {
  name: String!
}

type Mutation

"""The PaginateInfo type represents information about a paginated list."""
type PaginateInfo {
  currentPage: Int!
  totalPage: Int!
  hasNextPage: Boolean!
  totalCount: Int!
}

type Post {
  content: String!
  userId: ID!
  user: User!
  title: String!
}

"""The PostPaginateResponse type represents a paginated list of Post."""
type PostPaginateResponse {
  data: [Post!]!
  paginateInfo: PaginateInfo!
}

type Query {
  users(page: Int = 1, size: Int = 10, sort: SortOrder = ASC): [User!]!
  posts(page: Int = 1, size: Int = 10, sort: SortOrder = ASC): [Post!]!
}

"""The SortOrder enum type represents the order of a list."""
enum SortOrder {
  """The ASC enum value represents ascending order."""
  ASC

  """The DESC enum value represents descending order."""
  DESC
}

type Subscription

"""test user"""
type User implements HasName {
  name: String!
  posts(size: Int = 10, sort: SortOrder = ASC, page: Int = 1): [Post!]!
}

interface Userable {
  userId: ID!
  user: User!
}

"""The UserPaginateResponse type represents a paginated list of User."""
type UserPaginateResponse {
  data: [User!]!
  paginateInfo: PaginateInfo!
}

