# 自定义标量类型
# scalar TestScalar

# 定义接口
interface Node {
  id: ID!
}

interface Named {
  name: String!
}

# 定义用户类型
type User implements Node & Named {
  id: ID!
  name: String!
  age: Int
  role: Role!
  friends: [User!]!
  myOrders: [Order!]! @paginate
  test(a: ID!): User
  result: SearchResult @testRole(role: ADMIN)
}

# 定义商品类型
type Product implements Node & Named {
  id: ID!
  name: String!
  price: Float!
}

# 定义订单类型
type Order implements Node {
  id: ID!
  total: Float!
  product: Product!
}

# 定义联合类型
union SearchResult = User | Product

# 定义枚举
enum Role {
  ADMIN
  USER
  GUEST
}

# 定义输入类型
input UserInput {
  name: String!
  age: Int
  role: Role
}

# 定义查询操作
type Query {
  getUser(id: ID!): User @testInput(input: {name: "test", role: ADMIN, numbers: [1, 2, 3]})
  listUsers: [User!]!
  getProduct(id: ID!): Product
  listProducts: [Product!]!
  search(query: String!): [SearchResult!]!
}

# 定义变更操作
type Mutation {
  createUser(input: UserInput!): User
  deleteUser(id: ID!): Boolean
  createProduct(name: String!, price: Float!): Product
  deleteProduct(id: ID!): Boolean
}

# 定义订阅操作
type Subscription {
  userCreated: User
  productCreated: Product
}

input TestInput {
  name: String!
  role: Role!
  numbers: [Int!]!
}

# 定义指令
directive @test(name: String!) on FIELD_DEFINITION
directive @testRole(role: Role!) on FIELD_DEFINITION
directive @testInput(input: TestInput!) on FIELD_DEFINITION
